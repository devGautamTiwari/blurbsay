{"version":3,"sources":["firebase.js","Message.js","UserProfileContext.js","Chat.js","SignIn.js","App.js","serviceWorker.js","index.js"],"names":["firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","db","firestore","Message","forwardRef","props","ref","useState","message","text","setText","editMode","setEditMode","isUser","email","updateMessage","id","text_","collection","doc","set","edited","merge","className","username","IconButton","onClick","e","color","delete","Card","CardContent","TextField","value","variant","multiline","size","onChange","target","onBlur","onKeyPress","isMobile","shiftKey","key","preventDefault","disabled","type","Typography","component","UserProfileContext","createContext","UserProfileProvider","setEmail","setUsername","user","setUser","Provider","children","Chat","input","setInput","useContext","buttonDisabled","setButtonDisabled","messages","setMessages","messagesEndRef","useRef","useEffect","unsubscribe","orderBy","limit","onSnapshot","snapshot","docs","map","data","current","scrollIntoView","behavior","sendMessage","add","timestamp","FieldValue","serverTimestamp","style","marginLeft","Link","signOut","setTimeout","to","FormControl","placeholder","autoFocus","Copyright","align","Date","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","form","width","submit","SignIn","classes","error","setError","actionCodeSettings","url","handleCodeInApp","emailSent","setEmailSent","isSignInWithEmailLink","window","location","href","localStorage","getItem","signInWithEmailLink","then","authUser","removeItem","catch","err","prompt","console","log","Container","maxWidth","CssBaseline","Avatar","Grid","container","item","xs","required","fullWidth","label","name","autoComplete","Button","sendSignInLinkToEmail","setItem","signIn","Box","mt","APP","onAuthStateChanged","displayName","exact","path","App","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e3949328.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n  apiKey: \"AIzaSyAMY2JtBqFngQAu3rdCEeoYh5WCIu7xT9c\",\r\n  authDomain: \"blurbsay.firebaseapp.com\",\r\n  databaseURL: \"https://blurbsay.firebaseio.com\",\r\n  projectId: \"blurbsay\",\r\n  storageBucket: \"blurbsay.appspot.com\",\r\n  messagingSenderId: \"406380711850\",\r\n  appId: \"1:406380711850:web:7b2694b95acdcad74165d3\",\r\n});\r\n\r\nexport const auth = firebaseApp.auth();\r\nconst db = firebaseApp.firestore();\r\n\r\nexport default db;\r\n","import React, { forwardRef, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  TextField,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport { isMobile } from \"react-device-detect\";\r\n\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport db from \"./firebase\";\r\nimport \"./assets/css/Message.css\";\r\n\r\nconst Message = forwardRef((props, ref) => {\r\n  const [text, setText] = useState(props.message.text);\r\n  const [editMode, setEditMode] = useState(false);\r\n  const isUser = props.email === props.message.email;\r\n  const updateMessage = (id, text_) => {\r\n    db.collection(\"messages\").doc(id).set(\r\n      {\r\n        text: text_,\r\n        edited: true,\r\n      },\r\n      { merge: true }\r\n    );\r\n    setEditMode(false);\r\n  };\r\n\r\n  return (\r\n    <div ref={ref} className={`message ${isUser && \"message__user\"}`}>\r\n      <p className=\"message__username\">\r\n        {!isUser && props.message.username}\r\n        {props.message.edited && !isUser && \" (edited)\"}\r\n      </p>\r\n\r\n      {isUser && (\r\n        <>\r\n          <IconButton\r\n            className=\"message__edit\"\r\n            onClick={(e) => {\r\n              setEditMode(!editMode);\r\n            }}\r\n          >\r\n            <EditIcon color=\"primary\" />\r\n          </IconButton>\r\n\r\n          <IconButton\r\n            className=\"message__delete\"\r\n            onClick={() => db.collection(\"messages\").doc(props.id).delete()}\r\n          >\r\n            <DeleteIcon color=\"error\" />\r\n          </IconButton>\r\n        </>\r\n      )}\r\n      <Card className={isUser ? \"message__userCard\" : \"message__guestCard\"}>\r\n        <CardContent>\r\n          {!editMode ? (\r\n            <Typography\r\n              color=\"textPrimary\"\r\n              className={`message__text ${isUser && \"message__userText\"}`}\r\n              variant=\"h6\"\r\n              component=\"h6\"\r\n            >\r\n              {text}\r\n            </Typography>\r\n          ) : (\r\n            <form>\r\n              <TextField\r\n                value={text}\r\n                variant=\"outlined\"\r\n                multiline\r\n                size=\"small\"\r\n                onChange={(e) => setText(e.target.value)}\r\n                onBlur={() => {\r\n                  updateMessage(props.id, text);\r\n                }}\r\n                onKeyPress={(e) => {\r\n                  if (!isMobile) {\r\n                    if (!e.shiftKey && e.key === \"Enter\") {\r\n                      e.preventDefault();\r\n                      updateMessage(props.id, text);\r\n                    }\r\n                  }\r\n                }}\r\n              />\r\n              <IconButton\r\n                className=\"message__iconButton\"\r\n                disabled={!text}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                onClick={() => updateMessage(props.id, text)}\r\n              >\r\n                <SendIcon />\r\n              </IconButton>\r\n            </form>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Message;\r\n","import React, { useState, createContext } from \"react\";\r\n\r\nconst UserProfileContext = createContext();\r\n\r\nconst UserProfileProvider = (props) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [user, setUser] = useState(null);\r\n  // const [activeComponent, setActiveComponent] = useState(\"SignIn\");\r\n  // const [canAccess, setCanAccess] = useState(false);\r\n\r\n  return (\r\n    <UserProfileContext.Provider\r\n      value={[\r\n        [email, setEmail],\r\n        [username, setUsername],\r\n        [user, setUser],\r\n        // [authComponent, setAuthComponent],\r\n        // [canAccess, setCanAccess],\r\n      ]}\r\n    >\r\n      {props.children}\r\n    </UserProfileContext.Provider>\r\n  );\r\n};\r\n\r\nexport { UserProfileContext, UserProfileProvider };\r\n","import React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { isMobile } from \"react-device-detect\";\r\nimport Message from \"./Message\";\r\nimport {\r\n  FormControl,\r\n  TextField,\r\n  // Input,\r\n  IconButton,\r\n  Link,\r\n} from \"@material-ui/core\";\r\nimport FlipMove from \"react-flip-move\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport firebase from \"firebase\";\r\nimport db, { auth } from \"./firebase\";\r\nimport { UserProfileContext } from \"./UserProfileContext\";\r\nimport \"./assets/css/Chat.css\";\r\n\r\nfunction Chat() {\r\n  const [input, setInput] = useState(\"\");\r\n  const [\r\n    [email],\r\n    [username],\r\n    ,\r\n    [buttonDisabled, setButtonDisabled],\r\n  ] = useContext(UserProfileContext);\r\n  const [messages, setMessages] = useState([]);\r\n  const messagesEndRef = useRef(null);\r\n  useEffect(() => {\r\n    const unsubscribe = db\r\n      .collection(\"messages\")\r\n      .orderBy(\"timestamp\", \"asc\")\r\n      .limit(100)\r\n      .onSnapshot((snapshot) => {\r\n        setMessages(\r\n          snapshot.docs.map((doc) => ({ id: doc.id, message: doc.data() }))\r\n        );\r\n        messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n      });\r\n\r\n    return () => unsubscribe();\r\n\r\n    // setUsername(user.displayName);\r\n  }, []);\r\n\r\n  const sendMessage = (e) => {\r\n    e.preventDefault();\r\n    if (input) {\r\n      db.collection(\"messages\").add({\r\n        text: input,\r\n        username: username,\r\n        email: email,\r\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n      });\r\n      setInput(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat__main\">\r\n      <div className=\"chat__welcome\">\r\n        <h2\r\n          style={{\r\n            marginLeft: \"18px\",\r\n          }}\r\n        >\r\n          Welcome {username !== \"\" && username}!{\" \"}\r\n        </h2>\r\n        <Link\r\n          className=\"chat__signout\"\r\n          onClick={() => {\r\n            auth.signOut();\r\n            setButtonDisabled(true);\r\n            setTimeout(() => {\r\n              setButtonDisabled(false);\r\n            }, 4000);\r\n            return <Redirect to=\"/signin\" />;\r\n          }}\r\n          disabled={buttonDisabled}\r\n          variant=\"subtitle1\"\r\n          color=\"primary\"\r\n        >\r\n          Sign out\r\n        </Link>\r\n      </div>\r\n      <div className=\"chat__chat\">\r\n        <FlipMove className=\"chat__flipmove\">\r\n          {messages.map(({ id, message }) => (\r\n            <Message\r\n              key={id}\r\n              username={username}\r\n              message={message}\r\n              email={email}\r\n              id={id}\r\n            />\r\n          ))}\r\n        </FlipMove>\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n      <div>\r\n        <form className=\"chat__form\">\r\n          <FormControl className=\"chat__formControl\">\r\n            <TextField\r\n              className=\"chat__input\"\r\n              variant=\"outlined\"\r\n              placeholder=\"Type a message...\"\r\n              value={input}\r\n              multiline\r\n              size=\"small\"\r\n              onChange={(e) => setInput(e.target.value)}\r\n              onKeyPress={(e) => {\r\n                if (!isMobile) {\r\n                  if (!e.shiftKey && e.key === \"Enter\") {\r\n                    e.preventDefault();\r\n                    sendMessage(e);\r\n                  }\r\n                }\r\n              }}\r\n              autoFocus\r\n            />\r\n            <IconButton\r\n              className=\"chat__iconButton\"\r\n              disabled={!input}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n              onClick={sendMessage}\r\n            >\r\n              <SendIcon />\r\n            </IconButton>\r\n          </FormControl>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n// import FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n// import Checkbox from \"@material-ui/core/Checkbox\";\r\n// import Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { auth } from \"./firebase\";\r\nimport { UserProfileContext } from \"./UserProfileContext\";\r\nimport \"./assets/css/SignIn.css\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      {/* <Link color=\"inherit\" href=\"https://material-ui.com/\"> */}\r\n      Messenger003 {/* </Link>{\" \"} */}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: \"#F9C784\",\r\n    color: \"#000000\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignIn() {\r\n  const classes = useStyles();\r\n  const [[email, setEmail], [,], [,]] = useContext(UserProfileContext);\r\n  const [error, setError] = useState([]);\r\n  const actionCodeSettings = {\r\n    url: \"https://blurbsay.web.app/signin\",\r\n    handleCodeInApp: true,\r\n  };\r\n  const [emailSent, setEmailSent] = useState(false);\r\n  useEffect(() => {\r\n    if (emailSent) {\r\n      if (auth.isSignInWithEmailLink(window.location.href)) {\r\n        setEmail(localStorage.getItem(\"emailForSignIn\"));\r\n        if (!email) {\r\n          setEmail(prompt(\"Please provide your email for confirmation\"));\r\n        } else {\r\n          auth\r\n            .signInWithEmailLink(email, window.location.href)\r\n            .then((authUser) => {\r\n              localStorage.removeItem(\"emailForSignIn\");\r\n            })\r\n            .catch((err) => setError(err));\r\n        }\r\n      }\r\n    }\r\n    console.log(\"signin page loading\");\r\n  }, []);\r\n  const signIn = (e) => {\r\n    e.preventDefault();\r\n    auth\r\n      .sendSignInLinkToEmail(email, actionCodeSettings)\r\n      .then((authUser) => {\r\n        setError({});\r\n        setEmailSent(true);\r\n        localStorage.setItem(\"emailForSignIn\", email);\r\n      })\r\n      .catch((err) => setError(err));\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" className=\"signin__container\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <Typography color=\"error\">{error.message}</Typography>\r\n\r\n        <form className={classes.form}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                value={email}\r\n                onChange={(e) => {\r\n                  setEmail(e.target.value);\r\n                }}\r\n                autoComplete=\"email\"\r\n                autoFocus\r\n              />\r\n            </Grid>\r\n            {/* <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          /> */}\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={(e) => {\r\n                signIn(e);\r\n              }}\r\n              value={emailSent ? \"Link sent!\" : \"Get Sign In Link\"}\r\n              disabled={emailSent}\r\n            />\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useEffect, useContext } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport Chat from \"./Chat\";\r\nimport SignIn from \"./SignIn\";\r\nimport { auth } from \"./firebase\";\r\nimport { UserProfileProvider, UserProfileContext } from \"./UserProfileContext\";\r\nimport \"./assets/css/App.css\";\r\n\r\nfunction APP() {\r\n  const [[, setEmail], [, setUsername], [user, setUser]] = useContext(\r\n    UserProfileContext\r\n  );\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((authUser) => {\r\n      if (authUser) {\r\n        setUser(authUser);\r\n        setEmail(authUser.email);\r\n        setUsername(authUser.displayName);\r\n      } else {\r\n        setUser(null);\r\n        setUsername(\"\");\r\n        setEmail(\"\");\r\n      }\r\n    });\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, [user]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            {user ? <Chat /> : <Redirect to=\"signin\" />}\r\n          </Route>\r\n          <Route exact path=\"/signin\" component={SignIn} />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\nconst App = () => {\r\n  return (\r\n    <UserProfileProvider>\r\n      <APP />\r\n    </UserProfileProvider>\r\n  );\r\n};\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./assets/css/index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}